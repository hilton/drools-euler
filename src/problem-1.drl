package com.lunatech.euler.problem1

/*
	Problem 1
	05 October 2001

	If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

	Find the sum of all the multiples of 3 or 5 below 1000.
*/

/*
	Solution
	Note: the rules session starts with an initial set of at least 1000 NaturalNumber facts despite this not being most elegant,
	in order to demonstrate inserting reference data into a rules session (this is more a Drools example than about Project Euler).
*/

import com.lunatech.euler.model.*;
import function com.lunatech.euler.RuleFunctions.log;

rule "Add square"
when
	not SquareNumber()
then
	insert(new SquareNumber(4L, 2L));
	log(drools, "%d", 4);
end

rule "Natural number"
when
	NaturalNumber($n : value < 5L)
then
	log(drools, "%d", $n);
end

rule "Four" extends "Natural number"
when
	NaturalNumber($m : value > 3L, value == $n)
then
	log(drools, "%d", $m);
end

rule "Square number"
when
	SquareNumber($n : value < 5L)
then
	log(drools, "%d", $n);
end

rule "Square number with root"
when
	SquareNumber($n : value, $r : root)
then
	log(drools, "%d = %d squared", $n, $r);
end

query "Problem solutions"
	value : Solution()
end

rule "Problem 1 solution"
	when
		Number($multiples : longValue)
			from accumulate(
				NaturalNumber($v : value < 1000, ( (value % 3) == 0 || (value % 5) == 0) ),
				sum($v)
			)
	then
		insert(new Solution(1, $multiples));
		log(drools, "%d", $multiples);
end


package com.lunatech.euler.problem3

/*
	Problem 3
	02 November 2001

	The prime factors of 13195 are 5, 7, 13 and 29.

	What is the largest prime factor of the number 600851475143 ?
*/

/*
	Solution
	The fundamental theorem of arithmetic means that the number has a unique prime factorisation.
	Therefore, find prime factors and divide the composite until the prime factorisation is found.
	Note that a factor of n (excluding n itself) cannot be larger than its square root.
*/

import com.lunatech.euler.model.*;
import function com.lunatech.euler.RuleFunctions.log;

declare Limit
	value : long
end

declare PrimeFactor
	value : long
end

declare Composite
	value : long
end

rule "Starting value and limit"
when
	not Composite()
then
	long start = 600851475143L;
	insert(new Composite(start));
	double limit = Math.sqrt(new Double(start));
	insert(new Limit((long) limit));
	log(drools, "limit = %1.2f", limit);
end

rule "New prime factor"
when
	Composite($composite : value)
	Limit($limit : value)

	# $n is prime and divides the composite (using prime numbers generated in problem-7.drl)
	PrimeNumber($n : value > 1 && <= $composite && < $limit, ($composite % value) == 0);
then
	insert(new PrimeFactor($n));
	log(drools, "%d", $n);
end

rule "Divide composite by prime factor"
when
	PrimeFactor($factor : value)
	$composite : Composite( (value % $factor) == 0 )
then
	modify ($composite) { setValue($composite.getValue() / $factor); }
	log(drools, "divide by %d, composite = %d", $factor, $composite.getValue());
end

rule "Add number"
salience -1
when
	Composite(value > 1)
	Limit($limit : value)
	NaturalNumber($n : value <= ($limit - 1))
	not NaturalNumber(value == ($n + 1))
then
	insert(new NaturalNumber($n + 1));
end

rule "Problem 3 solution"
when
	Composite(value == 1)
	$solution : Number()
		from accumulate(
			PrimeFactor($n : value),
			max($n)
		)
	then
		insert(new Solution(3, $solution.longValue()));
		log(drools, "%1.0f", $solution);
end
